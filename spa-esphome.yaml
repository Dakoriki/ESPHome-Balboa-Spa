esphome:
  name: spa
  friendly_name: Spa-ESPhome
  includes:
    - spa_reader.h

  libraries:
    - rlogiacco/CircularBuffer

esp8266:
  board: d1_mini_pro
  framework:
    version: latest
    
#esp32:
  #board: esp32dev
  #framework:
    #type: arduino

# Enable logging
logger:

uart:
  id: spa_uart_bus
  tx_pin: TX
  rx_pin: RX
  data_bits: 8
  parity: NONE
  stop_bits: 1
  baud_rate: 115200
  rx_buffer_size: 128
#  debug:
#    direction: RX
#    dummy_receiver: true

sensor:
- platform: custom
  lambda: |-
    auto spareader = new SpaReader(id(spa_uart_bus));
    App.register_component(spareader);
    return {spareader->temp_sensor,spareader->target_temp_sensor,spareader->jet1_sensor,spareader->jet2_sensor,spareader->jet3_sensor,
    spareader->light_sensor,spareader->restmode_sensor,spareader->highrange_sensor,spareader->hour_sensor,spareader->minute_sensor,spareader->heater_sensor,spareader->circ_sensor,
    spareader->filt1hour_sensor,spareader->filt1minute_sensor,spareader->filt1durhour_sensor,spareader->filt1durminute_sensor,spareader->filt2enable_sensor,spareader->filt2hour_sensor,
    spareader->filt2minute_sensor,spareader->filt2durhour_sensor,spareader->filt2durminute_sensor};

  sensors:
  - name: "Current Temp"
    unit_of_measurement: °C
    accuracy_decimals: 1
  - name: "Target Temp"
    unit_of_measurement: °C
    accuracy_decimals: 1
  - name: "Jet1"
  - name: "Jet2"
  - name: "Jet3"
  - name: "Light"
  - name: "Rest Mode"
  - name: "High Range"
  - name: "Hour"
  - name: "Minute"
  - name: "Heater"
  - name: "Circulation Pump"
  - name: "Filter 1 Hour"
  - name: "Filter 1 Minute"
  - name: "Filter 1 Duration Hour"
  - name: "Filter 1 Duration Minute"
  - name: "Filter 2 Enable"
  - name: "Filter 2 Hour"
  - name: "Filter 2 Minute"
  - name: "Filter 2 Duration Hour"
  - name: "Filter 2 Duration Minute"
# Enable Home Assistant API

api:
  encryption:
    key: !secret api_enc_key

ota:
  password: !secret ota_pw

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Spa Fallback Hotspot"
    password: !secret ap_fallback_pw

captive_portal:
    
